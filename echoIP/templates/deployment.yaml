---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Release.Name }}
  labels:
    app: echoip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoip
  template:
    metadata:
      labels:
        app: echoip
    spec:
      containers:
      - name: echo
        image: {{ .Values.container.image }}:{{ .Values.container.tag }}
        ports:
        - containerPort: 8080
        securityContext:
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          runAsGroup: {{ .Values.securityContext.runAsGroup }}
        resources:
          limits:
            cpu: {{ .Values.resources.cpu.limit | default "100m" }}
            memory: {{ .Values.resources.memory.limit | default "50Mi" }}
          requests:
            cpu: {{ .Values.resources.cpu.request | default "10m" }}
            memory: {{ .Values.resources.memory.request | default "20Mi" }}
        args: {{ toYaml .Values.container.commandargs | nindent 8 }}
{{- if .Values.geoDB.enabled }}
{{- include "echoip.geolist" . | indent 8 }}
        volumeMounts:
        - name: geodatadir
          mountPath: /geodata
      initContainers:
      - name: pullgeo
        image: alpine:3
        command: 
        - /usr/local/bin/entryscript.sh
        env:
        - name: GEOAUTH
          valueFrom:
            secretKeyRef:
              name: {{ .Values.geoDB.secret.name }}
              key: {{ .Values.geoDB.secret.key }}
        volumeMounts:
        - name: geodatadir
          mountPath: /geodata
        - name: geoscript
          mountPath: /usr/local/bin/entryscript.sh
          subPath: entryscript.sh
      volumes:
      - name: geodatadir
        emptyDir: {}
      - name: geoscript
        configMap:
          defaultMode: 0555
          name: geodl
{{- end -}}